@INPROCEEDINGS{10172890,
    author={Marchezan, Luciano and Assunção, Wesley K. G. and Herac, Edvin and Keplinger, Felix and Egyed, Alexander and Lauwerys, Christophe},
    booktitle={IEEE/ACM 45th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)}, 
    title={Fulfilling Industrial Needs for Consistency Among Engineering Artifacts}, 
    year={2023},
    pages={246-257},
    keywords={Industries;Scalability;Collaboration;Companies;Manuals;Maintenance engineering;Real-time systems;Model-Driven Engineering;Consistency checking;Trace generation;Consistency flexibility},
    doi={10.1109/ICSE-SEIP58684.2023.00028}
  }

@INPROCEEDINGS{101728920,
  author = {Edvin  Herac and Wesley K. G.  Assunção and Luciano  Marchezan and Rainer Haas and Alexander  Egyed},
  title = {A flexible operation-based infrastructure for collaborative model-driven engineering},
  booktitle = {Journal of Object Technology},
  volume = {22},
  number = {2},
  issn = {1660-1769},
  year = {2023},
  note = {The 19th European Conference on Modelling Foundations and Applications (ECMFA 2023)},
  pages = {2:1-14},
  doi = {10.5381/jot.2023.22.2.a5},
  url = {http://www.jot.fm/contents/issue_2023_02/article5.html}
}

@INPROCEEDINGS{1017282390,
  author = {Herac, Edvin and Marchezan, Luciano and Assunção, Wesley and Haas, Rainer and Egyed, Alexander},
  title = {Journal-First: A flexible operation-based infrastructure for collaborative model-driven engineering},
  year = {2024},
  doi = {10.18420/modellierung2024_020},
  booktitle = {Modellierung 2024},
  publisher = {Gesellschaft für Informatik e.V.},
  address = {Bonn},
  pissn = {1617-5468},
  isbn = {978-3-88579-742-5},
  pages = {213-214}
}

@INPROCEEDINGS{2222,
  author = {Marchezan, Luciano and Assunção, Wesley K. G. and Michelon, Gabriela and Herac, Edvin and Egyed, Alexander},
  title = {Code smell analysis in cloned Java variants: the apo-games case study},
  year = {2022},
  isbn = {9781450394437},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3546932.3547015},
  doi = {10.1145/3546932.3547015},
  abstract = {Families of software products are usually created using opportunistic reuse (clone-and-own) in which products are cloned and adapted to meet new requirements, user preferences, or non-functional properties. Opportunistic reuse brings short-term benefits, e.g., reduced time-to-market, whereas creating long-term drawbacks, e.g., the need of changing multiple variants for any maintenance and evolution activity. This situation is even worse when the individual products have poor design or implementation choices, the so-called code smells. Due to their harmfulness to software quality, code smells should be detected and removed as early as possible. In a family of software products, the same code smell must be identified and removed in all variants where it is are present. Identifying instances of similar code smells affecting different variants has not been investigated in the literature yet. This is the case of the Apo-Games family, which has the challenge of identifying the flaws in the design and implementation of cloned games. To address this challenge, we applied our inconsistency and repair approach to detect and suggest solutions for six types of code smells in 19 products of the Apo-games family. Our results show that a considerable number of smells were identified, most of them for the long parameter list and data class types. The number of the same smells identified in multiple variants ranged between 2.9 and 20.2 on average, showing that clone-and-own may lead to the replication of code smells in multiple products. Lastly, our approach was able to generate between 4.9 and 28.98 repair alternatives per smell on average.},
  booktitle = {Proceedings of the 26th ACM International Systems and Software Product Line Conference - Volume A},
  pages = {250–254},
  numpages = {5},
  keywords = {software product line, inconsistency repair, consistency checking, code smells},
  location = {Graz, Austria},
  series = {SPLC '22}
}

@INPROCEEDINGS{ractiu2024using,
  title={Using reactive links to propagate changes across engineering models},
  author={Ratiu, Cosmina-Cristina and Assunção, Wesley KG and Herac, Edvin and Haas, Rainer and Lauwerys, Christophe and Egyed, Alexander},
  booktitle={Software and Systems Modeling},
  pages={1-27},
  year={2024},
  publisher={Springer}
}

@article{marchezanexploring,
  title={Exploring Dependencies Among Inconsistencies to Enhance the Consistency Maintenance of Models},
  author={Marchezan, Luciano and Assunção, Wesley KG and Herac, Edvin and Shafiq, Saad and Egyed, Alexander},
  year={2024},
  booktitle = {IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
}